name: Execute template to populate repository

on:
  push:
  workflow_dispatch:

permissions:
  contents: write
  actions: write

jobs:
  setup-repo:
    if: ${{ github.repository != 'falcopackages/starter-template' }}
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Install falco-cli
        run: uv tool install falco-cli --pre
      
      - name: Install just
        uses: extractions/setup-just@v2

      - uses: actions/github-script@v7
        id: fetch-repo-and-user-details
        with:
          script: |
            const query = `query($owner:String!, $name:String!) {
              repository(owner:$owner, name:$name) {
                name
                description
                owner {
                  login
                  ... on User {
                    name
                    email
                  }
                  ... on Organization {
                    name
                  }
                }
              }
            }`;
            const variables = {
              owner: context.repo.owner,
              name: context.repo.repo
            }
            const result = await github.graphql(query, variables)
            result.repository.owner.email = result.repository.owner.email || "tobidegnon@proton.me";
            console.log(result)
            return result

      - name: Rebuild contents using falco-cli
        env:
          INFO: ${{ steps.fetch-repo-and-user-details.outputs.result }}
        run: |
          export REPO_NAME=$(echo $INFO | jq -r '.repository.name')
          export AUTHOR_NAME=$(echo $INFO | jq -r .repository.owner.name)
          export AUTHOR_EMAIL=$(echo $INFO | jq -r .repository.owner.email)
          export DESCRIPTION="$(echo $INFO | jq -r .repository.description | sed 's/\"/\\\"/g')"
          export USERNAME="$(echo $INFO | jq -r .repository.owner.login)"
          # Run falco-cli
          pushd /tmp
          falco start-project $REPO_NAME -c next-release
          popd
          # Move generated content to root directory of repo, including hidden files
          mv /tmp/$REPO_NAME/.github .gh
          rsync -avz --remove-source-files /tmp/$REPO_NAME/ .
          # Delete the setup.yml workflow, it has served its purpose
          rm .github/workflows/setup.yml
          mv .gh .github
          # format the code
          falco fmt || true

      - name: Force push new repo contents
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Initial commit"
          push_options: --force
